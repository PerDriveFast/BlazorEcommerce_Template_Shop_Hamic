@page "/register"
@inject IAuthService AuthService

<PageTitle>Register</PageTitle>

<div class="col-lg-6 pt-10 pt-lg-0">
    <EditForm Model="user" OnValidSubmit="HandleRegistration">
        <div class="login-form">
            <h4 class="login-title">Register</h4>
            <div class="row">
                <div class="col-md-6 col-12">
                    <label for="email">Email</label>
                    <InputText id="email" @bind-Value="user.Email" class="form-control" />
                    <ValidationMessage For="@(() => user.Email)" />
                </div>
                <div class="col-md-6 col-12">
                    <label for="password">Password</label>
        <InputText id="password" @bind-Value="user.Password" class="form-control" type="password" />
        <ValidationMessage For="@(() => user.Password)" />
                </div>
                <div class="col-md-6 col-12">
                    <label for="confirmPassword">Confirm Password</label>
                    <InputText id="confirmPassword" @bind-Value="user.ConfirmPassword" class="form-control" type="password" />
                    <ValidationMessage For="@(() => user.ConfirmPassword)" />
                </div>
               
                <div class="col-12">
                    <button class="btn btn-custom-size lg-size btn-secondary btn-primary-hover rounded-0" type="submit">Register</button>
                </div>
            </div>
        </div>
          <div class="@messageCssClass">
        <span>@message</span>
    </div>
    </EditForm>
</div>


@code {
    UserRegister user = new UserRegister();

    string message = string.Empty;
    string messageCssClass = string.Empty;

    async Task HandleRegistration()
    {
        var result = await AuthService.Register(user);
        message = result.Message;
        if (result.Success)
            messageCssClass = "text-success";
        else
            messageCssClass = "text-danger";
    }
}
